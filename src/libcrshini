#!/usr/bin/env bash

set -eu

: "${_crshini_version:="0.1"}"
: "${_crshini_stdin:=false}"
: "${_crshini_debug:=false}"
: "${_crshini_output:=-}"
: "${_crshini_temp:="/tmp/libcrshini"}"

# Message function
_crshini_msg_err(){ echo "[libcrshini] Error ${*}" >&2; }
_crshini_msg_inf(){ echo "[libcrshini]  Info ${*}" >&1; }
_crshini_msg_wrn(){ echo "[libcrshini]  Warn ${*}" >&2; }
_crshini_msg_dbg(){ 
    if [[ "${_crshini_debug-false}" = true ]]; then
        echo "[libcrshini] Debug ${*}" >&2
    fi
}

# Output function
_crshini_print(){
    if [[ "${_crshini_output}" = "-" ]]; then
        echo "${@}"
    else
        _crshini_output="$(realpath "${_crshini_output}")"
        echo "${@}" > "${_crshini_output}"
    fi
}

# Write Temp file
_crshini_write_temp(){
    echo "${@}" > "${_crshini_temp}"
}

# Get index number from string
# _crshini_index_from_str string "${array[@]}"
_crshini_index_from_str(){
    local __string_to_find="${1}" __index
    shift 1
    local __array=("${@}")
    for __index in $(seq 0 "$(( "${#__array[@]}" - 1 ))"); do
        [[ "${__array["${__index}"]}" = "${__string_to_find}" ]] && echo "${__index}"
    done
    return 0
}

# --get command with line number
# _crshini_get_line file section param
_crshini_get_line(){
    # Set variables
    local _crshini_gl_fileline=() _crshini_gl_file _crshini_gl_section _crshini_gl_param __line _crshini_gl_insection=false _crshini_gl_output=()

    if [[ "${_crshini_stdin}" = true ]]; then
        readarray -t _crshini_gl_fileline
    else
        _crshini_gl_file="${1}"
        shift 1
        readarray -t _crshini_gl_fileline < "${_crshini_gl_file}"
    fi

    _crshini_gl_section="${1}" _crshini_gl_param="${2}"

    # Start
    for __line in $( seq 0 $(( "${#_crshini_gl_fileline[@]}" - 1 )) ); do
        case "${_crshini_gl_fileline[${__line}]}" in
            "[${_crshini_gl_section}]")
                _crshini_gl_insection=true
                continue
                ;;
            "["*"]")
                _crshini_gl_insection=false
                continue
                ;;
            "" | "#"*)
                continue
                ;;
        esac
        if [[ "${_crshini_gl_insection}" = true ]] && [[ "${_crshini_gl_fileline[${__line}]%%=*}" = "${_crshini_gl_param}" ]]; then
            _crshini_gl_output+=("$(( __line + 1 ))")
        fi
    done

    # Output
    if (( "${#_crshini_gl_output[@]}" != 0 )); then
        _crshini_print "${_crshini_gl_output[-1]}"
    fi
}

# --get command
# _crshini_get file [section] [param]
_crshini_get(){
    # Set variables
    local _crshini_get_fileline=() _crshini_get_output=() __line _crshini_get_insection=false
    local _crshini_get_file _crshini_get_section  _crshini_get_param

    if [[ "${_crshini_stdin}" = true ]]; then
        readarray -t _crshini_get_fileline
    else
        _crshini_get_file="${1}"
        shift 1
        readarray -t _crshini_get_fileline < "${_crshini_get_file}"
    fi

    _crshini_get_section="${1-""}" _crshini_get_param="${2-""}"

    if [[ -z "${_crshini_get_section}" ]]; then
        grep -E "^\[.+\]$" "${_crshini_get_file}"
    else
        for __line in "${_crshini_get_fileline[@]}"; do
            case "${__line}" in
                "[${_crshini_get_section}]")
                    _crshini_get_insection=true
                    continue
                    ;;
                "["*"]")
                    _crshini_get_insection=false
                    continue
                    ;;
                "" | "#"*)
                    continue
                    ;;
            esac
            if [[ "${_crshini_get_insection}" = true ]]; then
                if [[ -z "${_crshini_get_param}" ]]; then
                    _crshini_get_output+=("${__line%%=*}")
                elif [[ "${__line%%=*}" = "${_crshini_get_param}" ]]; then
                    _crshini_get_output+=("${__line##*=}")
                fi
            fi
        done
        if [[ -z "${_crshini_get_param}" ]]; then
            _crshini_print "$(printf "%s\n" "${_crshini_get_output[@]}")"
        elif (( "${#_crshini_get_output[@]}" != 0 )); then
            _crshini_print "${_crshini_get_output[-1]}"
        fi
    fi
    return 0
}

# --set command
# _crshini_set file section [param] [value]
_crshini_set(){
    # Set variables
    local _crshini_set_fileline=() _crshini_set_section _crshini_set_param _crshini_set_value
    local __line _crshini_set_insert_line _crshini_set_writed=false _crshini_set_mode

    if [[ "${_crshini_stdin}" = true ]]; then
        readarray -t _crshini_set_fileline
    else
        _crshini_set_file="${1}"
        shift 1
        readarray -t _crshini_set_fileline < "${_crshini_set_file}"
    fi

    _crshini_set_section="${1}" _crshini_set_param="${2-""}"  _crshini_set_value="${3-""}"

    # Copy
    local _crshini_set_modline
    readarray -t _crshini_set_sectionlist < <(_crshini_output="-" _crshini_get "${_crshini_set_file}")
    readarray -t _crshini_set_paramlist < <(_crshini_output="-" _crshini_get "${_crshini_set_file}" "${_crshini_set_section}")

    # Find and set section
    if ! printf "%s\n" "${_crshini_set_sectionlist[@]}" | grep -x "\[${_crshini_set_section}\]" 1> /dev/null 2>&1; then
        _crshini_set_fileline+=("[${_crshini_set_section}]")
        _crshini_set_sectionlist+=("${_crshini_set_section}")
    fi

    # Find and Set param
    if printf "%s\n" "${_crshini_set_paramlist[@]}" | grep -x "${_crshini_set_param}" 1> /dev/null 2>&1; then
        _crshini_msg_dbg "値の書き換えを行います"
        _crshini_set_insert_line=$(( "$(_crshini_output="-" _crshini_get_line "${_crshini_set_file}" "${_crshini_set_section}" "${_crshini_set_param}")" ))
        _crshini_set_mode="rewrite"
    elif (( "${#_crshini_set_paramlist[@]}" == 0 )) || [[ -z "${_crshini_set_paramlist[*]}" ]]; then
        _crshini_msg_dbg "空のセクションに値を追加します"
        _crshini_set_insert_line="$(_crshini_output="-" _crshini_index_from_str "[${_crshini_set_section}]" "${_crshini_set_fileline[@]}")"
        _crshini_set_mode="new"
    else
        _crshini_msg_dbg "セクションの最後に追記します"
        _crshini_set_mode="new"
    fi
    
    if [[ "${_crshini_set_mode}" = "new" ]]; then
        _crshini_set_insert_line=$(( _crshini_set_insert_line + 1 ))
    elif [[ "${_crshini_set_mode}" = "rewrite" ]]; then
        _crshini_set_insert_line=$(( _crshini_set_insert_line - 1 ))
    fi

    for __line in $( seq 0 $(( "${#_crshini_set_fileline[@]}")) ); do
    
        if [[ "${_crshini_set_writed}" = true ]] ; then
            if [[ -n "${_crshini_set_fileline[${__line}]+SET}" ]]; then
                _crshini_set_modline+=("${_crshini_set_fileline[${__line}]}")
                continue
            fi
        fi

        if ! (( __line == _crshini_set_insert_line)); then
            if [[ -n "${_crshini_set_fileline[${__line}]+SET}" ]]; then
                _crshini_set_modline+=("${_crshini_set_fileline[${__line}]}")
            fi
        else
            _crshini_set_modline+=("${_crshini_set_param}=${_crshini_set_value}")
            _crshini_set_writed=true
        fi
    done

    # Output
    _crshini_print "$(printf "%s\n" "${_crshini_set_modline[@]}")"
}
